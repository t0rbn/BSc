@misc{wiki:wissarbeit,
  author = {Wikipedia},
  title = {Wissenschaftliche Arbeit},
  year = {2016},
  url = {https://de.wikipedia.org/w/index.php?title=Wissenschaftliche\_Arbeit&oldid=156007167},
  lastchecked = {2016-07-21}
}

@INPROCEEDINGS{Gray1981,
  author = {Jim Gray},
  title = {{The Transaction Concept: Virtues and Limitations}},
  booktitle = {Very Large Data Bases, 7th International Conference, September 9-11,
	Cannes, France, Proceedings},
  year = {1981},
  pages = {144-154},
  publisher = {IEEE Computer Society},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {db/conf/vldb/Gray81.html},
  pdf = {http://www.stanford.edu/class/cs240/readings/Gray81.pdf},
  url = {http://www.stanford.edu/class/cs240/readings/Gray81.pdf},
}

@INPROCEEDINGS{DBLP:conf/icsoc/LeymannG03,
  author = {Frank Leymann and Kai GÃ¼ntzel},
  title = {{The Business Grid: Providing Transactional Business Processes via
	Grid Services.}},
  booktitle = {ICSOC},
  year = {2003},
  pages = {256-270},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  crossref = {DBLP:conf/icsoc/2003},
  ee = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=2910{\&}spage=256},
}

@INPROCEEDINGS{DBLP:conf/gcc/LiTC03,
  author = {Minglu Li and Feilong Tang and Jian Cao},
  title = {{An Integration Architecture for Grid Resources.}},
  booktitle = {GCC (1)},
  year = {2003},
  pages = {708-715},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  crossref = {DBLP:conf/gcc/2003-1},
  ee = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=3032{\&}spage=708},
}

@INPROCEEDINGS{DBLP:conf/appt/TangLC03,
  author = {Feilong Tang and Minglu Li and Jian Cao},
  title = {{A Transaction Model for Grid Computing.}},
  booktitle = {APPT},
  year = {2003},
  pages = {382-386},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  crossref = {DBLP:conf/appt/2003},
  ee = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=2834{\&}spage=382},
}

@INPROCEEDINGS{DBLP:conf/gcc/TangLCD03,
  author = {Feilong Tang and Minglu Li and Jian Cao and Qianni Deng},
  title = {{Coordinating Business Transaction for Grid Service.}},
  booktitle = {GCC (1)},
  year = {2003},
  pages = {108-114},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  crossref = {DBLP:conf/gcc/2003-1},
  ee = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=3032{\&}spage=108},
}

@INPROCEEDINGS{DBLP:conf/IEEEcit/YuLTLH04,
  author = {Jiadi Yu and Minglu Li and Feilong Tang and Ying Li and Feng Hong},
  title = {{A Framework for Implementing Transactions on Grid Services.}},
  booktitle = {CIT},
  year = {2004},
  pages = {375-379},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  crossref = {DBLP:conf/IEEEcit/2004},
  ee = {http://csdl.computer.org/comp/proceedings/cit/2004/2216/00/22160375abs.htm},
}

@MANUAL{Anderson2005a,
  title = {{Web Services Secure Conversation Language (WS-SecureConversation)}},
  author = {Steve Anderson and Jeff Bohren and Toufic Boubez and Marc Chanliau
	and Giovanni Della-Libera and Brendan Dixon and Praerit Garg and
	Martin Gudgin and Satoshi Hada and Phillip Hallam-Baker and Maryann
	Hondo and Chris Kaler and Hal Lockhart and Robin Martherus and Hiroshi
	Maruyama and Anthony Nadalin and Nataraj Nagaratnam and Andrew Nash
	and Rob Philpott and Darren Platt and Hemma Prafullchandra and Maneesh
	Sahu and John Shewchuk and Dan Simon and Davanum Srinivas and Elliot
	Waingold and David Waite and Doug Walter and Riaz Zolfonoon},
  month = {Februar},
  year = {2005},
  note = {\url{http://specs.xmlsoap.org/ws/2005/02/sc/WS-SecureConversation.pdf}},
  pdf = {http://specs.xmlsoap.org/ws/2005/02/sc/WS-SecureConversation.pdf},
  url = {#http://specs.xmlsoap.org/ws/2005/02/sc/WS-SecureConversation.pdf#},
}

@MANUAL{Anderson2005,
  title = {{Web Services Trust Language (WS-Trust)}},
  author = {Steve Anderson and Jeff Bohren and Toufic Boubez and Marc Chanliau
	and Giovanni Della-Libera and Brendan Dixon and Praerit Garg and
	Martin Gudgin and Phillip Hallam-Baker and Maryann Hondo and Chris
	Kaler and Hal Lockhart and Robin Martherus and Hiroshi Maruyama and
	Anthony Nadalin and Nataraj Nagaratnam and Andrew Nash and Rob Philpott
	and Darren Platt and Hemma Prafullchandra and Maneesh Sahu and John
	Shewchuk and Dan Simon and Davanum Srinivas and Elliot Waingold and
	David Waite and Doug Walter and Riaz Zolfonoon},
  month = {Februar},
  year = {2005},
  note = {\url{http://specs.xmlsoap.org/ws/2005/02/trust/WS-Trust.pdf}},
  pdf = {http://specs.xmlsoap.org/ws/2005/02/trust/WS-Trust.pdf},
  url = {#http://specs.xmlsoap.org/ws/2005/02/trust/WS-Trust.pdf#},
}

@MANUAL{Andrews2003,
  title = {{Business Process Execution Language for Web Services Version 1.1}},
  author = {Tony Andrews and Francisco Curbera and Hitesh Dholakia and Yaron
	Goland and Johannes Klein and Frank Leymann and Kevin Liu and Dieter
	Roller and Doug Smith and Satish Thatte and Ivana Trickovic and Sanjiva
	Weerawarana},
  month = {Mai},
  year = {2003},
  note = {\url{ftp://www6.software.ibm.com/software/developer/library/ws-bpel.pdf}},
  pdf = {ftp://www6.software.ibm.com/software/developer/library/ws-bpel.pdf},
  url = {#ftp://www6.software.ibm.com/software/developer/library/ws-bpel.pdf#},
}

@MANUAL{wsagreement,
  title = {{Web Services Agreement Specification (WS-Agreement)}},
  author = {Alain Andrieux and Karl Czajkowski and Asit Dan and Kate Keahey and
	Heiko Ludwig and Jim Pruyne and John Rofrano and Steve Tuecke and
	Ming Xu},
  month = {Mai},
  year = {2004},
  note = {\url{http://www.gridforum.org/Meetings/GGF11/Documents/draft-ggf-graap-agreement.pdf}},
  abstract = {This document describes Web Services
Agreement Specification (WS-Agreement),
	an XML language for specifying an
agreement between a resource/service
	provider and a consumer, and a
protocol for creation of an agreement
	using agreement templates.},
  pdf = {http://www.gridforum.org/Meetings/GGF11/Documents/draft-ggf-graap-agreement.pdf},
  url = {#http://www.gridforum.org/Meetings/GGF11/Documents/draft-ggf-graap-agreement.pdf#},
}

@MANUAL{gdsSpec,
  title = {{Grid Data Service Specification}},
  author = {Mario Antonioletti and Malcolm Atkinson and Susan Malaika and Simon
	Laws and Norman W Paton and Dave Pearson and Greg Riccardi},
  month = {September},
  year = {2003},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-spec-ggf9.pdf}},
  abstract = {Data management systems are central to many applications across multiple
domains,
	and play a significant role in many others. Web services
provide
	implementation neutral facilities for describing, invoking and
orchestrating
	collections of networked resources. The Open Grid Services
Architecture
	(OGSA) extends Web Services with consistent interfaces for
creating,
	managing and exchanging information among Grid Services, which
are
	dynamic computational artefacts cast as Web Services. Both Web
and
	Grid service communities stand to benefit from the provision of
consistent,
	agreed service interfaces to data management systems. Such
interfaces
	must support the description and use of data management systems
using
	Web Service standards, taking account of the design conventions
and
	mandatory features of Grid Services. This document presents a
specification
	for a collection of generic data access interfaces that can be
extended
	to support access to specific kinds of data resource, such as
relational
	databases, XML repositories or files. The proposal is presented
for
	discussion within the Global Grid Forum (GGF) Database Access
and
	Integration Services (DAIS) Working Group, with a view to the
document
	evolving to become a proposed recommendation. There are
several respects
	in which the current proposal is incomplete, but it is
hoped that
	the material included is sufficient to allow an informed
discussion
	to take place concerning both its form and substance.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-spec-ggf9.pdf},
  url = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-spec-ggf9.pdf},
}

@MANUAL{gdsSpecXML,
  title = {{Data Service Specification: The XML Realisation}},
  author = {Mario Antonioletti and Amy Krause and Shannon Hastings and Stephen
	Langella and Susan Malaika and Simon Laws and Norman W Paton},
  month = {September},
  year = {2003},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-xml-ggf9.pdf}},
  abstract = {Data management systems are central to many applications across multiple
domains,
	and play a significant role in many others. Web services
provide
	implementation neutral facilities for describing, invoking and
orchestrating
	collections of networked resources. The Open Grid Services
Infrastructure
	(OGSI) extends Web Services with consistent interfaces for
creating,
	managing and exchanging information among Grid Services, which
are
	dynamic computational artifacts cast as Web Services. Both Web
and
	Grid service communities stand to benefit from the provision of
consistent,
	agreed service interfaces to data management systems. Such
interfaces
	must support the description and use of data management systems
using
	Web Service standards, taking account of the design conventions
and
	mandatory features of Grid Services. This document presents a
specification
	for a collection of data access interfaces for XML
Data Resources,
	which extends interfaces defined in the Grid Data
Service Specification
	[GDSS], which in turn is based on the OGSA
Data Services proposal
	[Data Services]. This document is presented
for discussion within
	the Global Grid Forum (GGF) Database Access
and Integration Services
	(DAIS) Working Group, with a view to the
document evolving to become
	a proposed recommendation. There are
several respects in which the
	current proposal is incomplete, but it is
hoped that the material
	included is sufficient to allow an informed
discussion to take place
	concerning both its form and substance.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-xml-ggf9.pdf},
  url = {#http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-xml-ggf9.pdf#},
}

@MANUAL{gdsRelational,
  title = {{Grid Data Service Specification: The Relational Realisation}},
  author = {Mario Antonioletti and Amy Krause and Shannon Hastings and Stephen
	Langella and Susan Malaika and James Magowan and Simon Laws},
  month = {September},
  year = {2003},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-rel-ggf9.pdf}},
  abstract = {Data management systems are central to many applications across multiple
domains,
	and play a significant role in many others. Web services
provide
	implementation neutral facilities for describing, invoking and
orchestrating
	collections of networked resources. The Open Grid Services
Architecture
	(OGSA) extends Web Services with consistent interfaces for
creating,
	managing and exchanging information among Grid Services, which
are
	dynamic computational artifacts cast as Web Services. Both Web
and
	Grid service communities stand to benefit from the provision of
consistent,
	agreed service interfaces to data management systems. Such
interfaces
	must support the description and use of data management systems
using
	Web Service standards, taking account of the design conventions
and
	mandatory features of Grid Services. This document presents a
specification
	for a collection of data access interfaces for relational
data resources,
	which extends interfaces defined in the Grid Data
Service Specification
	[GDSS], which in turn is based on the OGSA Data
Services proposal
	[Data Services]. The specification is presented
for discussion within
	the Global Grid Forum (GGF) Database Access
and Integration Services
	(DAIS) Working Group, with a view to the
document evolving to become
	a proposed recommendation. There are
several respects in which the
	current proposal is incomplete, but it is
hoped that the material
	included is sufficient to allow an informed
discussion to take place
	concerning both its form and substance.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-rel-ggf9.pdf},
  url = {#http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-rel-ggf9.pdf#},
}

@MANUAL{wssecurity,
  title = {{WS Security}},
  author = {Bob Atkinson and Giovanni Della-Libera and Satoshi Hada and Maryann
	Hondo and Phillip Hallam-Baker and Johannes Klein and Brian LaMacchia
	and Paul Leach and John Manferdelli and Hiroshi Maruyama and Anthony
	Nadalin and Nataraj Nagaratnam and Hemma Prafullchandra and John
	Shewchuk and Dan Simon},
  year = {2002},
  note = {\url{http://www-106.ibm.com/developerworks/webservices/library/ws-secure/}},
  abstract = {WS-Security describes enhancements to SOAP messaging to
provide quality
	of protection through message integrity, message
confidentiality,
	and single message authentication. These mechanisms
can be used to
	accommodate a wide variety of security models and
encryption technologies.
	WS-Security also provides a general-purpose
mechanism for associating
	security tokens with messages. No specific
type of security token
	is required by WS-Security. It is designed to
be extensible (e.g.
	support multiple security token formats). For
example, a client might
	provide proof of identity and proof that they
have a particular business
	certification. Additionally, WS-Security
describes how to encode
	binary security tokens. Specifically, the
specification describes
	how to encode X.509 certificates and Kerberos tickets
as well as
	how to include opaque encrypted keys. It also includes
extensibility
	mechanisms that can be used to further describe the
characteristics
	of the credentials that are included with a message.
Composable Architecture
	By using the SOAP extensibility model, SOAP-based
specifications
	are designed to be composed with each other to provide a rich
messaging
	environment. By itself, WS-Security does not ensure security
nor
	does it provide a complete security solution. WS-Security is a
building
	block that is used in conjunction with other Web service and
application-specific
	protocols to accommodate a wide variety of security models and
encryption
	technologies. Implementing WS-Security does not mean that an
application
	cannot be attacked or that the security cannot be compromised.},
  url = {#http://www-106.ibm.com/developerworks/webservices/library/ws-secure/#},
}

@MANUAL{Atkinson2003,
  title = {{Grid Database Access and Integration: Requirements and Functionalities}},
  author = {Malcolm P Atkinson and Vijay Dialani and Leanne Guy and Inderpal
	Narang and Norman W Paton and Dave Pearson and Tony Storey and Paul
	Watson},
  organization = {DAIS-WG},
  month = {Februar},
  year = {2003},
  note = {\url{http://www.ggf.org/Meetings/ggf7/drafts/DAIS_GGF7RF.pdf}},
  abstract = {This document is intended to provide the context for
developing Grid
	data service standard recommendations within the Global
Grid Forum.
	It defines the generic requirements for accessing and
integrating
	persistent structured and semi-structured data. In addition, it
defines
	the generic functionalities which a Grid data service needs to
provide
	in supporting discovery of and controlled access to data, in
performing
	data manipulation operations, and in virtualising data
resources.
	The document also defines the scope of Grid data service
standard
	recommendations which are presented in a separate document.},
  pdf = {http://www.ggf.org/Meetings/ggf7/drafts/DAIS_GGF7RF.pdf},
  url = {#http://www.ggf.org/Meetings/ggf7/drafts/DAIS_GGF7RF.pdf#},
}

@MANUAL{Bajaj2004,
  title = {{Web Services Policy Framework (WS-Policy)}},
  author = {Siddharth Bajaj and Don Box and Dave Chappell and Francisco Curbera
	and Glen Daniels and Phillip Hallam-Baker and Maryann Hondo and Chris
	Kaler and Dave Langworthy and Ashok Malhotra and Anthony Nadalin
	and Nataraj Nagaratnam and Mark Nottingham and Hemma Prafullchandra
	and Claus von Riegen and Jeffrey Schlimmer and Chris Sharp and John
	Shewchuk},
  month = {September},
  year = {2004},
  note = {\url{http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnglobspec/html/ws-policy.asp}},
}

@MANUAL{Beatty2005,
  title = {{Web Services Dynamic Discovery (WS-Discovery)}},
  author = {John Beatty and Gopal Kakivaya and Devon Kemp and Thomas Kuehnel
	and Brad Lovering and Bryan Roe and Christopher St. John and Jeffrey
	Schlimmer and Guillaume Simonnet and Doug Walter and Jack Weast and
	Yevgeniy Yarmosh and Prasad Yendluri},
  month = {April},
  year = {2005},
  note = {\url{http://schemas.xmlsoap.org/ws/2005/04/discovery/}},
  abstract = {This specification defines a multicast discovery protocol to locate
	services. By
default, probes are sent to a multicast group, and target
	services
that match return a response directly to the requester.
	To scale
to a large number of endpoints, the protocol defines the
	multicast
suppression behavior if a discovery proxy is available
	on the network.
To minimize the need for polling, target services
	that wish to be
discovered send an announcement when they join and
	leave the network.},
  pdf = {http://schemas.xmlsoap.org/ws/2005/04/discovery/},
  url = {#http://schemas.xmlsoap.org/ws/2005/04/discovery/#},
}

@BOOK{DBLP:books/mk/BernsteinN96,
  title = {{Principles of Transaction Processing for Systems Professionals.}},
  publisher = {Morgan Kaufmann},
  year = {1996},
  author = {Philip A. Bernstein and Eric Newcomer},
  isbn = {1-55860-415-4},
}

@MANUAL{WSA,
  title = {{Web Services Architecture}},
  author = {David Booth and Hugo Haas and Francis McCabe and Eric Newcomer and
	Michael Champion and Chris Ferris and David Orchard},
  organization = {W3C},
  month = {Februar},
  year = {2004},
  note = {\url{http://www.w3.org/TR/ws-arch/}},
  url = {http://www.w3.org/TR/ws-arch/},
}

@MANUAL{Box2004,
  title = {{Web Services Addressing (WS-Addressing)}},
  author = {Don Box and Erik Christensen and Francisco Curbera and Donald Ferguson
	and Jeffrey Frey and Marc Hadley and Chris Kaler and David Langworthy
	and Frank Leymann and Brad Lovering and Steve Lucco and Steve Millet
	and Nirmal Mukhi and Mark Nottingham and David Orchard and John Shewchuk
	and EugÃ¨ne Sindambiwe and Tony Storey and Sanjiva Weerawarana and
	Steve Winkler},
  organization = {W3C},
  month = {August},
  year = {2004},
  note = {\url{http://www.w3.org/Submission/ws-addressing/}},
  abstract = {WS-Addressing provides transport-neutral
mechanisms to address Web
	services and messages. Specifically, this
specification defines XML
	[XML 1.0, XML Namespaces] elements to identify Web
service endpoints
	and to secure end-to-end endpoint identification in
messages. This
	specification enables messaging systems to support message
transmission
	through networks that include processing nodes such as endpoint
managers,
	firewalls, and gateways in a transport-neutral manner.},
  url = {http://www.w3.org/Submission/ws-addressing/},
}

@MANUAL{Bray2004,
  title = {{Extensible Markup Language (XML) 1.0}},
  author = {Tim Bray and Jean Paoli and C. M. Sperberg-McQueen and Eve Maler
	and FranÃ§ois Yergeau},
  organization = {W3C},
  edition = {Third Edition},
  month = {Februar},
  year = {2004},
  note = {\url{http://www.w3.org/TR/REC-xml/}},
  owner = {boba},
  url = {#http://www.w3.org/TR/REC-xml/#},
}

@MANUAL{wscaf,
  title = {{Web Services Composite Application Framework (WS-CAF) Ver1.0}},
  author = {Doug Bunting and Martin Chapman and Oisin Hurley and Mark Little
	and Jeff Mischkinsky and Eric Newcomer and Jim Webber and Keith Swenson},
  month = {Juli},
  year = {2003},
  note = {\url{http://developers.sun.com/techtopics/webservices/wscaf/primer.pdf}},
  abstract = {The ability to compose an application out of
multiple Web services
	is a fundamental characteristic of the technology.
However, without
	sufficient infrastructure support services, composite
applications
	must rely on proprietary solutions to ensure correct
operation. Applications
	typically use multiple Web services in combination
to solve specific
	business problems such as processing an order,
updating multiple
	customer records from a single change request, or
scheduling just
	in time arrival of parts for a manufacturing run.
The Web Services
	Composite Application Framework specifications, or
WS-CAF, propose
	standard, interoperable mechanisms for managing shared
context and
	ensuring business processes achieve predictable results
and recovery
	from failure. The ability to share system information,
called context,
	is essential for the proper operation of applications
composed of
	multiple Web services. Context identifies a Web service
as part of
	a composite application and allows each Web service to
share information
	such as message correlation, security tokens, and
database connections.
	Extensions to basic context operations provide
the ability to support
	long running units of work such as business
process automations and
	workflows. The WS-CAF specifications complement
other Web services
	specifications in the areas of security, reliable
messaging, choreography,
	and transactions. The WS-CAF specifications also
include an innovative
	approach to transactional interoperability,
spanning multiple models,
	multiple middleware, and multiple devices
when they are included
	within asynchronous business process flows.},
  pdf = {http://developers.sun.com/techtopics/webservices/wscaf/primer.pdf},
  url = {#http://developers.sun.com/techtopics/webservices/wscaf/primer.pdf#},
}

@MANUAL{wscf,
  title = {{Web Services Coordination Framework (WS-CF) Ver1.0}},
  author = {Doug Bunting and Martin Chapman and Oisin Hurley and Mark Little
	and Jeff Mischkinsky and Eric Newcomer and Jim Webber and Keith Swenson},
  month = {Juli},
  year = {2003},
  note = {\url{http://developers.sun.com/techtopics/webservices/wscaf/wscf.pdf}},
  abstract = {Coordination is a requirement present in a
variety of different aspects
	of distributed applications. For instance,
workflow, atomic transactions,
	caching and replication, security,
auctioning, and business-tobusiness
	activities all require some level of
what may be collectively referred
	to as ?coordination.? For example,
coordination of multiple Web services
	in choreography may be required
to ensure the correct result of a
	series of operations comprising
a single business transaction. Whenever
	coordination occurs, the
propagation of additional information (the
	coordination context) to
coordinated participants is required. The
	coordination context contains
information such as a unique ID that
	allows a series of operations to
share a common outcome. The outcome
	is typically defined in terms
of coordinated state persistence operations.
	For example, in a Web
services-based architecture, a SOAP header
	block might contain context
information that is propagated when interacting
	with a coordinator, or when
multiple participants exchange SOAP messages
	in order to create a larger
interaction such as a process flow or
	other aggregation of services. A
Web services coordinator maintains
	a repository of participants and
ensures that each participant receives
	a result of the coordinated
interaction. A coordinator can also be
	a participant, creating a tree
of sub-coordinators or peer-coordinators
	that cooperate to further
propagate the result. When one of the participants
	generates a fault,
for example, the coordinator ensures that all
	other participants
are notified. A Web services coordinator sends
	and receives SOAP
encoded messages for interoperability with any
	type of participant,
regardless of operating system, programming
	language, or platform. Context
information flows as SOAP header blocks
	with application messages sent to
participants/endpoints. The important
	point is that this information is specific
to the type of coordination
	being performed, e.g., to identify the
coordinator(s), the other
	participants, recovery information in the event of
a failure, etc.
	Coordination is a fundamental requirement of many
distributed systems,
	including Web Services. However, the type of
coordination protocol
	that is used may vary depending upon the circumstances
(e.g., two-phase
	versus three-phase). Therefore, what is needed is a
standardization
	on a coordination framework (coordination service)
that allows users
	and services to register with it, and customize
it on a per service
	or per application basis. Such a coordination
service would also
	support newly emerging Web service standards such as
workflow and
	transactions and builds on the Web services CTX Service.},
  pdf = {http://developers.sun.com/techtopics/webservices/wscaf/wscf.pdf},
  url = {#http://developers.sun.com/techtopics/webservices/wscaf/wscf.pdf#},
}

@MANUAL{wsctx,
  title = {{Web Services Context (WS-Context) Ver1.0}},
  author = {Doug Bunting and Martin Chapman and Oisin Hurley and Mark Little
	and Jeff Mischkinsky and Eric Newcomer and Jim Webber and Keith Swenson},
  month = {Juli},
  year = {2003},
  note = {\url{http://developers.sun.com/techtopics/webservices/wscaf/wsctx.pdf}},
  abstract = {The ability to scope arbitrary units of work is a requirement in a
variety
	of aspects of distributed applications such as workflow and
business-to-business
	interactions. By scoping work, we mean that it is possible for
business
	activity participants to be able to determine unambiguously
whether
	or not they are participating in the same activity. In order to
correlate
	the work of participants within the same activity, it is
necessary
	to propagate additional information know as the context to
each participant.
	The context contains information (such as a unique
identifier) that
	allows a series of operations to share a common
outcome. For example,
	in a Web services-based application, a SOAP header
block might contain
	contextual information that is propagated when
invoking an operation
	on a Web Service, or when multiple participants
exchange SOAP messages
	in order to create a larger interaction such as a
process flow. A
	Web Services Context Service maintains a repository
of context information
	and tracks contexts shared between multiple
participants in Web services
	interactions. An Context Service can also be a
participant within
	an activity, creating a tree to further propagate the
context. A
	Web Services Context Service accepts and emits SOAP messages
for
	interoperability with any type of participant, regardless of
operating
	system, programming language, or platform ? and is independent
of
	underlying transfer or transport protocols. Context is always
propagated
	in addition to application payload, where context information
travels
	within the SOAP header blocks while application payload (that
is,
	the content intended for processing by a SOAP node playing the
ultimateReceiver
	role) is propagated inside the SOAP body. The context
information
	is specific to the type of activity being performed, such as to
identify
	a transaction coordinator, the other participants in an
activity,
	or recovery information in the event of a failure, etc.
Therefore,
	a single context type is not sufficient for all types of
activity
	that a Context Service may be required to support. Hence, the
capabilities
	of the Context Service must be extensible in an application
specific
	manner and services must be able to augment the context as
they require
	to suit their own particular application domains. Given
the importance
	of context propagation in many distributed systems,
including Web
	Services, standardization on a context framework (Context
Service)
	is a logical progression in increasing the usefulness and
robustness
	of the Web Services architecture. That is, there is a distinct
requirement
	for a generic context propagation service that allows users and
services
	to register with it, and customize it on a per-service or
per-application
	basis. This service also supports newly emerging Web
Service standards
	such as coordination, workflow and transactions.},
  pdf = {http://developers.sun.com/techtopics/webservices/wscaf/wsctx.pdf},
  url = {#http://developers.sun.com/techtopics/webservices/wscaf/wsctx.pdf#},
}

@MANUAL{wstxm,
  title = {{Web Services Transaction Management (WS-TXM) Ver1.0}},
  author = {Doug Bunting and Martin Chapman and Oisin Hurley and Mark Little
	and Jeff Mischkinsky and Eric Newcomer and Jim Webber and Keith Swenson},
  month = {Juli},
  year = {2003},
  note = {\url{http://developers.sun.com/techtopics/webservices/wscaf/wstxm.pdf}},
  abstract = {An increasing number of applications
are being constructed by combining
	or coordinating the execution of
multiple Web services, each of which
	may represent an interface to
a different underlying technology.
	The resulting applications can
be very complex in structure, with
	complex relationships between
their constituent services. Furthermore,
	the execution of such an
application may take a long time to complete,
	and may contain long
periods of inactivity, often due to the constituent
	services requiring
user interactions. In the loosely coupled environment
	represented by
Web services, long running applications will require
	support for
recovery and compensation, because machines may fail,
	processes may
be cancelled, or services may be moved or withdrawn.
	Web services
transactions also must span multiple transaction models
	and protocols
native to the underlying technologies onto which the
	Web services are
mapped. A common technique for fault-tolerance is
	through the use
of atomic transactions, which have the well know
	ACID properties,
operating on persistent (long-lived) objects. Transactions
	ensure
that only consistent state changes take place despite concurrent
access
	and failures. However, traditional transactions depend upon
tightly
	coupled protocols, and thus are often not well suited to more
loosely-coupled
	Web services based applications, although they are likely to be
used
	in some of the constituent technologies. It is more likely that
traditional
	transactions are used in the minority of cases in which
the cooperating
	Web services can take advantage of them, while new
mechanisms, such
	as compensation, replay, and persisting business process
state, more
	suited to Web services are developed and used for the more
typical
	case. WS-TXN provides a suite of transaction models, each
suited
	to solving a different problem domain. However, because WS-TXN
leverages
	WS-CF, it is intended to allow flexibility in the types of
models
	supported. Therefore, if new models are required for other
problem
	areas, they can be incorporated within this specification.},
  pdf = {http://developers.sun.com/techtopics/webservices/wscaf/wstxm.pdf},
  url = {#http://developers.sun.com/techtopics/webservices/wscaf/wstxm.pdf#},
}

@MANUAL{wscoord,
  title = {{Web Services Coordination (WS-Coordination)}},
  author = {Luis Felipe Cabrera and George Copeland and Max Feingold and Tom
	Freund and Jim Johnson and Chris Kaler and Johannes Klein and David
	Langworthy and Anthony Nadalin and David Orchard and Ian Robinson
	and John Shewchuk and Tony Storey},
  month = {November},
  year = {2004},
  note = {\url{http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-Coordination.pdf}},
  abstract = {This specification (WS-Coordination) describes an
extensible framework
	for providing protocols that coordinate the
actions of distributed
	applications. Such coordination protocols
are used to support a number
	of applications, including those that
need to reach consistent agreement
	on the outcome of distributed
activities. The framework defined in
	this specification enables an
application service to create a context
	needed to propagate an activity
to other services and to register
	for coordination protocols. The
framework enables existing transaction
	processing, workflow, and
other systems for coordination to hide
	their proprietary protocols
and to operate in a heterogeneous environment.
	Additionally this
specification describes a definition of the structure
	of context and the
requirements for propagating context between cooperating
	services.},
  pdf = {http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-Coordination.pdf},
  url = {#http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-Coordination.pdf#},
}

@MANUAL{wsat,
  title = {{Web Services Atomic Transaction (WS-AtomicTransaction)}},
  author = {Luis Felipe Cabrera and George Copeland and Max Feingold and Tom
	Freund and Jim Johnson and Chris Kaler and Johannes Klein and David
	Langworthy and Anthony Nadalin and David Orchard and Ian Robinson
	and Tony Storey and Satish Thatte},
  month = {November},
  year = {2004},
  note = {\url{http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-AtomicTransaction.pdf}},
  abstract = {This specification provides the
definition of the atomic transaction
	coordination type that is to be
used with the extensible coordination
	framework described in the
WS-Coordination specification. The specification
	defines three specific
agreement coordination protocols for the atomic
	transaction coordination
type: completion, volatile two-phase commit,
	and durable two-phase
commit. Developers can use any or all of these
	protocols when building
applications that require consistent agreement
	on the outcome of
short-lived distributed activities that have the
	all-or-nothing property.},
  pdf = {http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-AtomicTransaction.pdf},
  url = {#http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-AtomicTransaction.pdf#},
}

@MANUAL{wsba,
  title = {{Web Services Business Activity Framework (WS-BusinessActivity)}},
  author = {Luis Felipe Cabrera and George Copeland and Tom Freund and Johannes
	Klein and David Langworthy and Frank Leymann and David Orchard and
	Ian Robinson and Tony Storey and Satish Thatte},
  month = {November},
  year = {2004},
  note = {\url{http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-BusinessActivity.pdf}},
  abstract = {This specification provides
the definition of the business activity
	coordination type that is
to be used with the extensible coordination
	framework described in
the WS-Coordination specification. The specification
	defines two
specific agreement coordination protocols for the business
	activity
coordination type: BusinessAgreementWithParticipantCompletion,
	and
BusinessAgreementWithCoordinatorCompletion. Developers can use
	any or all of
these protocols when building applications that require
	consistent
agreement on the outcome of long-running distributed activities.},
  pdf = {http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-BusinessActivity.pdf},
  url = {#http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-BusinessActivity.pdf#},
}

@BOOK{Cerami2002,
  title = {{Web Services Essentials}},
  publisher = {O'Reilly},
  year = {2002},
  editor = {Simon St.Laurent},
  author = {Ethan Cerami},
  month = {Februar},
}

@MANUAL{Chappell2004,
  title = {{Web Services Brokered Notification 1.2 (WS-BrokeredNotification)}},
  author = {Dave Chappell and Lily Liu},
  organization = {OASIS Open},
  month = {Juli},
  year = {2004},
  note = {\url{http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BrokeredNotification-1.2-draft-01.pdf}},
  owner = {boba},
  pdf = {http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BrokeredNotification-1.2-draft-01.pdf},
  url = {#http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BrokeredNotification-1.2-draft-01.pdf#},
}

@ARTICLE{cheung92grid,
  author = {Shun Yan Cheung and Mostafa H. Ammar and Mustaque Ahamad},
  title = {{The Grid Protocol: A High Performance Scheme for Maintaining Replicated
	Data}},
  journal = {Knowledge and Data Engineering},
  year = {1992},
  volume = {4},
  pages = {582-592},
  number = {6},
  note = {\url{http://citeseer.ist.psu.edu/cheung90grid.html}},
  abstract = {We present a new protocol for maintaining replicated data that can
	provide both high data
availability and low response time. In the
	protocol, thenodes are
organized in a logical grid. Existing protocols
	are designed primarily to
achievehigh availability byupdating a large
	fraction of the copies
which provides some (althoughnot significant)load
	sharing. In the new
protocol, transaction processing is sharedeffectively
	amongnodes
storing copies of the data and both the response timeexperienced
	by
transactionsand the system throughput are improved significantly.
	We
present ananalysis of theavailability of the new protocol and
	use
simulation to study theeffect of load sharingon the response
	time of
transactions. We also compare the newprotocol with a votingbased
	scheme.},
  citeseerurl = {http://citeseer.ist.psu.edu/cheung90grid.html},
  pdf = {http://citeseer.ist.psu.edu/cache/papers/cs/6585/ftp:zSzzSzwww.mathcs.emory.eduzSzpubzSzcheungzSzpaperszSztkde92.pdf/cheung90grid.pdf},
  url = {#http://citeseer.ist.psu.edu/cheung90grid.html#},
}

@MANUAL{wsdlSpec,
  title = {{Web Services Description Language (WSDL) 1.1}},
  author = {Erik Christensen and Francisco Curbera and Greg Meredith and Sanjiva
	Weerawarana},
  month = {MÃ¤rz},
  year = {2001},
  note = {\url{http://www.w3.org/TR/wsdl.html}},
  url = {#http://www.w3.org/TR/wsdl.html#},
}

@MANUAL{Clark1999,
  title = {{XML Path Language (XPath) Version 1.0}},
  author = {James Clark and Steve DeRose},
  month = {November},
  year = {1999},
  note = {\url{http://www.w3.org/TR/xpath}},
  abstract = {XPath is a language for addressing parts
of an XML document, designed
	to be used by both XSLT and XPointer.},
  owner = {boba},
  url = {http://www.w3.org/TR/xpath},
}

@MANUAL{uddiSpec,
  title = {{UDDI Version 3.0.2}},
  author = {Luc Clement and Andrew Hately and Claus von Riegen and Tony Rogers},
  month = {Oktober},
  year = {2004},
  note = {\url{http://uddi.org/pubs/uddi_v3.htm}},
  url = {#http://uddi.org/pubs/uddi_v3.htm#},
}

@MANUAL{Czajkowski2004,
  title = {{The WS-Resource Framework (Version 1.0)}},
  author = {Karl Czajkowski and Donald F Ferguson and Ian Foster and Jeffrey
	Frey and Steve Graham and Igor Sedukhin and David Snelling and Steve
	Tuecke and William Vambenepe},
  month = {Mai},
  year = {2004},
  note = {\url{http://www.globus.org/wsrf/specs/ws-wsrf.pdf}},
  url = {#http://www.globus.org/wsrf/specs/ws-wsrf.pdf#},
}

@MANUAL{gdsTrans,
  title = {{Grid Data Services - Transformation Service}},
  author = {Vijay Dialani and Indepal Narang},
  month = {September},
  year = {2003},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-trans-ggf9.pdf}},
  abstract = {Data accessed from/by DAIS services may
need to be transformed for
	either optimizing the system performance
or to provide the data in
	an application acceptable format. This
document proposes a transformation
	service. It allows integration
of user-defined function types and
	supports multiple result sets.
We propose a service interface that
	can either be implemented as
a separate service or as a port type
	supported by DAIS services.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-trans-ggf9.pdf},
  url = {#http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-trans-ggf9.pdf#},
}

@INPROCEEDINGS{ellr90,
  author = {A. Elmagarmid and Y. Leu and W. Litwin and Marek Rusinkiewicz},
  title = {{A multidatabase transaction model for InterBase}},
  booktitle = {Proceedings of the sixteenth international conference on Very large
	databases},
  year = {1990},
  pages = {507--518},
  address = {San Francisco, CA, USA},
  publisher = {Morgan Kaufmann Publishers Inc.},
  isbn = {0-55860-149-X},
  location = {Brisbane, Australia},
}

@MANUAL{Fallside2004,
  title = {{XML Schema Part 0: Primer}},
  author = {David C. Fallside and Priscilla Walmsley},
  organization = {W3C},
  edition = {Second Edition},
  month = {Oktober},
  year = {2004},
  note = {\url{http://www.w3.org/TR/xmlschema-0/}},
  owner = {boba},
  url = {http://www.w3.org/TR/xmlschema-0/},
}

@TECHREPORT{tmrgReport,
  author = {Tony Fletcher},
  title = {{Report of the Transaction Management Research Group}},
  institution = {TM-RG},
  year = {2005},
  month = {Juni},
  note = {\url{https://forge.gridforum.org/projects/tm-rg/document/Report_of_the_Transaction_Management_Research_Group/en/4}},
}

@TECHREPORT{tmrgUseCase,
  author = {Tony Fletcher},
  title = {{Transaction Use cases Details}},
  institution = {TM-RG},
  year = {2005},
  month = {Juni},
  note = {\url{https://forge.gridforum.org/projects/tm-rg/document/Transaction_Use_cases/en/4}},
}

@MISC{tmrgBTP,
  author = {Tony Fletcher},
  title = {{OASIS Business Transaction Protocol - A Tutorial presentation for
	the GGF Transaction Management Research Group}},
  howpublished = {PrÃ¤sentation},
  month = {November},
  year = {2004},
  note = {\url{https://forge.gridforum.org/projects/tm-rg/document/BTP_Presentation/en/2}},
  url = {#https://forge.gridforum.org/projects/tm-rg/document/BTP_Presentation/en/2#},
}

@MANUAL{FosterOGSA,
  title = {{The Open Grid Services Architecture, Version 1.0}},
  author = {I. Foster and D. Berry and A. Djaoui and A. Grimshaw and B. Horn
	and H. Kishimoto and F. Maciel and A. Savva and F. Siebenlist and
	R. Subramaniam and J. Treadwell and J. Von Reich},
  month = {Juli},
  year = {2004},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-ogsa-spec.pdf}},
  abstract = {Successful realization of the Open Grid Services
Architecture (OGSA)
	vision of a broadly applicable and adopted framework
for distributed
	system integration, virtualization, and management
requires the definition
	of a core set of interfaces, behaviors, resource
models, and bindings.
	This document, produced by the OGSA working group
within the Global
	Grid Forum (GGF), provides a first, and necessarily
preliminary and
	incomplete, version of this OGSA definition. The
document specifies
	requirements, the scope of important capabilities and
services required
	to support Grid systems and applications in both
e-science and e-business,
	identifies a core set of such services
that are viewed as essential
	for many systems and applications, and
specifies at a high-level
	the functionalities required for these
core services and the interrelationships
	among those core services.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-ogsa-spec.pdf},
  url = {#http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-ogsa-spec.pdf#},
}

@MANUAL{gdsServices,
  title = {{OGSA Data Services}},
  author = {I. Foster and S. Tuecke and J. Unger},
  month = {September},
  year = {2003},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-dataservices-ggf9.pdf}},
  abstract = {This document describes a general framework for including data resources
	into the
serviceoriented Open Grid Services Architecture (OGSA).
	An OGSA data
service is a Grid service that implements one or more
	of four base data
interfaces to enable access to, and management
	of, data resources in a
distributed environment. Data services are
	built on OGSI, which extends Web
services to incorporate mechanisms
	for naming and reference of service
instances, state management,
	notification, dynamic service creation, and
lifecycle management.
	The base data interfaces, DataDescription,
DataAccess, DataFactory,
	and DataManagement, define basic service
data and/or operations for
	representing, accessing, creating, and
managing data services. Data
	services implement various combinations
of these interfaces, typically
	in extended forms, to incorporate
information resources such as file
	systems and files, relational
databases and tables, XML collections
	and documents, large binary
objects (such as images or multi-media
	streams), and application
generated data into the OGSA/OGSI service-oriented
	architecture.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-dataservices-ggf9.pdf},
  url = {#http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-dataservices-ggf9.pdf#},
}

@BOOKLET{Foster2002,
  title = {{What is the Grid? A Three Point Checklist}},
  author = {Ian Foster},
  month = {Juli},
  year = {2002},
  note = {\url{http://www-fp.mcs.anl.gov/~foster/Articles/WhatIsTheGrid.pdf}},
  abstract = {The recent explosion of commercial
and scientific interest in the
	Grid makes it timely to revisit the
question: What is the Grid, anyway?
	I propose here a three-point
checklist for determining whether a
	system is a Grid. I also discuss
the critical role that standards
	must play in defining the Grid.},
  institution = {Argonne National Laboratory \& University of Chicago},
  pdf = {http://www-fp.mcs.anl.gov/~foster/Articles/WhatIsTheGrid.pdf},
  url = {#http://www-fp.mcs.anl.gov/~foster/Articles/WhatIsTheGrid.pdf#},
}

@ARTICLE{Foster2002a,
  author = {Ian Foster},
  title = {{The Grid: A New Infrastructure for 21st Century Science}},
  journal = {Physics Today},
  year = {2002},
  volume = {Vol. 55},
  pages = {42},
}

@BOOKLET{anatomyofgrid,
  title = {{The Anatomy of the Grid}},
  author = {Ian Foster and Carl Kesselman and Steven Tuecke},
  year = {2001},
  note = {\url{http://www.globus.org/research/papers/anatomy.pdf}},
  abstract = {Grid computing has emerged as an important new
field, distinguished
	from conventional distributed computing by its
focus on large-scale
	resource sharing, innovative applications, and,
in some cases, high-performance
	orientation. In this article, we
define this new field. First, we
	review the ?Grid problem,? which we
define as flexible, secure, coordinated
	resource sharing among dynamic
collections of individuals, institutions,
	and resources?what we refer
to as virtual organizations. In such
	settings, we encounter unique
authentication, authorization, resource
	access, resource discovery,
and other challenges. It is this class
	of problem that is addressed
by Grid technologies. Next, we present
	an extensible and open Grid
architecture, in which protocols, services,
	application programming
interfaces, and software development kits
	are categorized according to
their roles in enabling resource sharing.
	We describe requirements
that we believe any such mechanisms must
	satisfy and we discuss the
importance of defining a compact set of
	intergrid protocols to enable
interoperability among different Grid
	systems. Finally, we discuss how Grid
technologies relate to other
	contemporary technologies, including enterprise
integration, application
	service provider, storage service provider, and
peer-to-peer computing.
	We maintain that Grid concepts and technologies
complement and have
	much to contribute to these other approaches.},
  pdf = {http://www.globus.org/research/papers/anatomy.pdf},
  url = {http://www.globus.org/research/papers/anatomy.pdf},
}

@MANUAL{btp,
  title = {{Business Transaction Protocol (BTP 1.1)}},
  author = {Peter Furniss and Sanjay Dalal and Tony Fletcher and Alastair Green
	and Alex Ceponkus and Bill Pope},
  year = {2004},
  note = {\url{http://www.oasis-open.org/committees/download.php/9836/business_transaction-btp-1.1-spec-wd-04.pdf}},
  abstract = {The Business Transaction Protocol (BTP) is a carrier-neutral protocol
	to allow
coordination of application work between multiple autonomous,
	cooperating
participants. It defines protocol exchanges to ensure
	the overall
application achieves a consistent result. This consistency
	may be defined a
priori: all the work is confirmed or none is (an
	atomic business
transaction or atom); or it can be determined by
	application intervention
in the selection of the work to be confirmed
	(a cohesive business
transaction or cohesion). The protocol is defined
	in terms of abstract
messages schematized in XML. This specification
	defines communications
protocol bindings to SOAP but alscarriage
	of BTP messages over other
communication protocols. BTP is based
	on a permissive and minimal
approach, where constraints on implementation
	choices are avoided.
The protocol also tries to avoid unnecessary
	dependencies on other
standards, with the aim of lowering the hurdle
	to implementation.},
  url = {#http://www.oasis-open.org/committees/download.php/9836/business_transaction-btp-1.1-spec-wd-04.pdf#},
}

@BOOK{Gamma1996,
  title = {{Entwurfsmuster}},
  publisher = {Addison-Wesley},
  year = {1996},
  author = {Erich Gamma and Richard Helm and Ralph Johnson and John Vlissides},
}

@INPROCEEDINGS{Garcia-Molina1987,
  author = {Hector Garcia-Molina and Kenneth Salem},
  title = {{Sagas}},
  booktitle = {SIGMOD '87: Proceedings of the 1987 ACM SIGMOD international conference
	on Management of data},
  year = {1987},
  pages = {249--259},
  address = {New York, NY, USA},
  publisher = {ACM Press},
  doi = {http://doi.acm.org/10.1145/38713.38742},
  isbn = {0-89791-236-5},
  location = {San Francisco, California, United States},
}

@MANUAL{gdsDist,
  title = {{Data Distribution in the Grid Environment}},
  author = {Dieter Gawlick and Vitthal Gogate and Cecile Madsen and Shailendra
	Mishra and Inderpal Narang and Mahadevan Subramanian},
  month = {Oktober},
  year = {2003},
  note = {\url{http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-dist-ggf9-2.pdf}},
  abstract = {Data Grids [DATA] are distributed environments where applications
	access, manage
and distribute data and events in a timely fashion
	at a very large
scale and potentially across organizational boundaries.
	Challenges
arise from the size of the data, the geographical distance,
	and the
number of involved parties (such publishers and consumers).
	Data
Grids need to protect the critical data (security, authorization,
auditing,
	etc.) and need to guarantee transparent and efficient access
to and
	distribution of data with the required Quality Of Service
(QOS).
	?Grid Data Distribution? - here after known as (GDD) model
- answers
	these requirements. The GDD model supports dynamic and
efficient
	data distribution of customized information mainly based on
consumer?s
	needs. The outline of the paper is as follows. First we
provide a
	definition of the GDD components. Second we position GDD
functionality
	with respect to Grid Data Access and Notification.
Then we describe
	in detail the operations that are introduced to
support the new functionality,
	which are defined as extensions of the
existing Data Access specifications
	and we describe the use case
scenarios of GDD for Data Replication
	and 3rd party Data delivery.
Finally, we outline the remaining work
	and open issues in this area.},
  pdf = {http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-dist-ggf9-2.pdf},
  url = {#http://www.cs.man.ac.uk/grid-db/papers/draft-ggf-dais-dist-ggf9-2.pdf#},
}

@MANUAL{Graham2005,
  title = {{Web Services Resource 1.2 (WS-Resource)}},
  author = {Steve Graham and Anish Karmarkar and Jeff Mischkinsky and Ian Robinson
	and Igor Sedukhin},
  organization = {OASIS Open},
  month = {MÃ¤rz},
  year = {2005},
  note = {\url{http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-Resource-1.2-draft-03.pdf}},
  pdf = {http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-Resource-1.2-draft-03.pdf},
  url = {#http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-Resource-1.2-draft-03.pdf#},
}

@MANUAL{Graham2004,
  title = {{Web Services Base Notification 1.2 (WS-BaseNotification)}},
  author = {Steve Graham and Bryan Murray},
  organization = {OASIS Open},
  month = {Juni},
  year = {2004},
  note = {\url{http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-03.pdf}},
  owner = {boba},
  pdf = {http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-03.pdf},
  url = {#http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-03.pdf#},
}

@MANUAL{Graham2005a,
  title = {{Web Services Resource Properties 1.2 (WS-ResourceProperties)}},
  author = {Steve Graham and Jem Treadwell},
  organization = {OASIS Open},
  month = {April},
  year = {2005},
  note = {\url{http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ResourceProperties-1.2-draft-06.pdf}},
  pdf = {http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ResourceProperties-1.2-draft-06.pdf},
  url = {#http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ResourceProperties-1.2-draft-06.pdf#},
}

@BOOK{DBLP:books/mk/GrayR93,
  title = {{Transaction Processing: Concepts and Techniques}},
  publisher = {Morgan Kaufmann},
  year = {1993},
  author = {Jim Gray and Andreas Reuter},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  isbn = {1-55860-190-2},
}

@MANUAL{soapSpec,
  title = {{SOAP Version 1.2}},
  author = {Martin Gudgin and Marc Hadley and Noah Mendelsohn and Jean-Jacques
	Moreau and Henrik Frystyk Nielsen},
  month = {Juni},
  year = {2003},
  note = {\url{http://www.w3.org/TR/soap/}},
  abstract = {SOAP Version 1.2 is a lightweight protocol
intended for exchanging
	structured information in a decentralized,
distributed environment.
	"Part 1: Messaging Framework" defines, using XML
technologies, an
	extensible messaging framework containing a message
construct that
	can be exchanged over a variety of underlying protocols.},
  url = {#http://www.w3.org/TR/soap/#},
}

@BOOKLET{He2003,
  title = {{What is Service-Oriented Architecture?}},
  author = {Hao He},
  month = {September},
  year = {2003},
  note = {\url{http://webservices.xml.com/pub/a/ws/2003/09/30/soa.html}},
  url = {#http://webservices.xml.com/pub/a/ws/2003/09/30/soa.html#},
}

@MISC{Hong2004,
  author = {Neil Chue Hong},
  title = {{OGSA-DAI road map for Q3 2004 - Q3 2005}},
  month = {September},
  year = {2004},
  note = {\url{http://www.ogsadai.org.uk/docs/OtherDocs/OGSA-DAIRoadmapV2.0.pdf}},
  pdf = {http://www.ogsadai.org.uk/docs/OtherDocs/OGSA-DAIRoadmapV2.0.pdf},
  url = {#http://www.ogsadai.org.uk/docs/OtherDocs/OGSA-DAIRoadmapV2.0.pdf#},
}

@ARTICLE{HusemannRathigRitter2004,
  author = {Martin Husemann and Denis Rathig and Norbert Ritter},
  title = {{Transaktionskontrolle im Grid-Data-Computing}},
  journal = {PIK - Praxis der Informationsverarbeitung und Kommunikation},
  year = {2004},
  volume = {27},
  pages = {159-166},
  number = {3},
  month = {9},
  abstract = {Grid-Data-Services sind auf Web-Service-Technologien beruhende
Dienste,
	die dynamisch in komplexe, datenintensive VerarbeitungsvorgÃ¤nge
einbezogen
	werden kÃ¶nnen (Grid-Data-Computing), die wiederum eines
Transaktionsschutzes
	bedÃ¼rfen. Aufgrund der NÃ¤he zu Web-Services kann eine
Transaktionskontrolle
	auf Basis der Spezifikationen WS-Coordination
und WS-Transaction
	vorgenommen werden. Diese erfÃ¼llen jedoch die
Anforderungen des Grid-Data-Computing
	nur unzureichend, da hÃ¤ufig auftretende
Ablaufmuster nicht angemessen
	unterstÃ¼tzt werden. Beispielsweise
ist es nicht mÃ¶glich, eine Transaktion
	durch eine Anfrage an einen
Grid-Data-Service zu initiieren, die
	Ergebnisse zur Verarbeitung an
einen dritten Teilnehmer weiterzuleiten
	und diesen die Transaktion
beenden zu lassen. Ebenso wird der dynamischen
	Fortpflanzung von
VerarbeitungsvorgÃ¤ngen Ã¼ber vielfÃ¤ltige Grid-Data-Services
	hinweg
nicht konsequent Rechnung getragen. Wir schlagen in diesem
	Beitrag
ein auf WS-Coordination und WS-Transaction aufbauendes Ablaufmodell
fÃ¼r
	das Grid-Data- Computing vor, das die beschriebenen Defizite
durch
	die EinfÃ¼hrung spezieller Dienste und Protokolle ausrÃ¤umt.},
  pdf = {http://vsis-www.informatik.uni-hamburg.de/getDoc.php/publications/233/HRR_PIK04.pdf},
}

@MANUAL{Iwasa2004,
  title = {{Web Services Reliable Messaging (WS-Reliability 1.1)}},
  author = {Kazunori Iwasa and Jacques Durand and Tom Rutt and Mark Peel and
	Sunil Kunisetty and Doug Bunting},
  organization = {OASIS},
  month = {November},
  year = {2004},
  note = {\url{http://docs.oasis-open.org/wsrm/ws-reliability/v1.1/wsrm-ws_reliability-1.1-spec-os.pdf}},
  pdf = {http://docs.oasis-open.org/wsrm/ws-reliability/v1.1/wsrm-ws_reliability-1.1-spec-os.pdf},
  url = {#http://docs.oasis-open.org/wsrm/ws-reliability/v1.1/wsrm-ws_reliability-1.1-spec-os.pdf#},
}

@MANUAL{Leymann2001,
  title = {{Web Services Flow Language (WSFL 1.0)}},
  author = {Frank Leymann},
  organization = {IBM},
  month = {Mai},
  year = {2001},
  note = {\url{http://www-3.ibm.com/software/solutions/webservices/pdf/WSFL.pdf}},
  pdf = {http://www-3.ibm.com/software/solutions/webservices/pdf/WSFL.pdf},
  url = {#http://www-3.ibm.com/software/solutions/webservices/pdf/WSFL.pdf#},
}

@BOOKLET{compbtpwsc,
  title = {{A comparison of Web services transaction protocols (A comparative
	analysis of WS-C/WS-Tx and OASIS BTP)}},
  author = {Mark Little and Thomas Freund },
  month = {10},
  year = {2003},
  note = {\url{http://www-106.ibm.com/developerworks/webservices/library/ws-comproto/}},
  url = {#http://www-106.ibm.com/developerworks/webservices/library/ws-comproto/#},
}

@BOOKLET{intwscaf,
  title = {{Introducing WS-CAF - More than just transactions}},
  author = {Mark Little and Jim Webber},
  month = {12},
  year = {2003},
  note = {\url{http://www.sys-con.com/webservices/articleprint.cfm?id=737}},
  url = {#http://www.sys-con.com/webservices/articleprint.cfm?id=737#},
}

@MANUAL{Maguire2005,
  title = {{Web Services Service Group 1.2 (WS-ServiceGroup)}},
  author = {Tom Maguire and David Snelling},
  organization = {OASIS Open},
  month = {Februar},
  year = {2005},
  note = {\url{http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ServiceGroup-1.2-draft-04.pdf}},
  pdf = {http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ServiceGroup-1.2-draft-04.pdf},
  url = {#http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ServiceGroup-1.2-draft-04.pdf#},
}

@ARTICLE{dbspektrum/Michalewicz04,
  author = {Markus Michalewicz},
  title = {{Die Bedeutung der Grid-Thematik fÃ¼r die IT-Landschaft moderner Unternehmen
	- Teil 1: Das Grid im Ãberblick}},
  journal = {Datenbank-Spektrum},
  year = {2004},
  volume = {4},
  pages = {33--40},
  number = {11},
  abstract = {Das Thema "Grid" (englisch: Gitter, Netz) oder "Grid Computing" gewinnt
	mit dem
Ausklang der Konsolidierungsphase bei vielen Unternehmen
	immer mehr an
Bedeutung. Dieser Artikel diskutiert in diesem Zusammenhang,
	was
sich hinter dem Grid-Gedanken verbirgt und welche Auswirkungen
	sich
daraus fÃ¼r die IT-Landschaften moderner Unternehmen ergeben
	kÃ¶nnen.
Dabei soll zunÃ¤chst auf die wissenschaftliche Bedeutung des
	Grid
Computings eingegangen werden, um in Folge aufzuzeigen, dass
	der
rein wissenschaftliche Ansatz nicht direkt auf heutige Unternehmen
umgesetzt
	werden kann. Um die Implementierung eines Grids damit nicht von
vornherein
	auszuschlieÃen, erfolgt abschlieÃend die Beschreibung,
mit welchen
	Kompromissen eine Grid-LÃ¶sung heute bereits aufgebaut
werden kann.
	Erst im zweiten Teil dieses Artikels (der in einem der
nÃ¤chsten Hefte
	erscheint) soll dann anhand von Umsetzungsbeispielen die
EinsatzmÃ¶glichkeiten
	derartiger LÃ¶sungen kritisch hinterfragt und Ã¼berprÃ¼ft werden.},
  publisher = {dpunkt.verlag},
}

@BOOK{gridMinoli,
  title = {{A Networking Approach to Grid Computing}},
  publisher = {Wiley-Interscience},
  year = {2004},
  author = {Daniel Minoli},
  month = {Oktober},
  abstract = {Deriving the grid metaphor from the
electric network of cables and
	power stations, grid computing is and
extension of the concept of
	"computer time sharing" in which the
computing environment aims at
	enabling the selection, sharing, and
aggregation of geographically
	distributed resources based on a range of
considerations important
	to optimizing computing resources. Aiming his
volume at corporate
	IT professionals, Minoli (managing director,
Leading-Edge Networks
	Incorporated) synthesizes the state of the field,
covering such topics
	as grid benefits; components and architectures;
standards; deployment
	issues and approaches; grid system economics;
and communication systems
	for local, national, and global grids.},
}

@BOOKLET{membranecalc,
  title = {{Membrane Calculus: A Formal Method for Grid Transactions}},
  author = {Zhengwei Qi and Cheng Fu and Dongyu Shi and Jinyuan You and Minglu
	Li},
  month = {10},
  year = {2004},
  note = {\url{http://dctc.sjtu.edu.cn/~FU.C/papers/gcc04.pdf}},
  abstract = {The research of transaction processing in Web Services andGrid services
	is very active in
academic and engineering areas now. How-ever, the
	formal method about
transactions is not fully investigated inthe
	literature. We propose a
preliminary theoretical model called Mem-brane
	Calculus based on
Membrane Computing and Petri Nets to for-malize
	Grid transactions. We
introduce Â¯ve kinds of transition rules inMembrane
	Calculus (including
object rules and membrane rules) andthe operational
	semantics of
transition rules is deÂ¯ned. Finally, a typicallong-running
	transaction
example is presented to demonstrate the usageof Membrane
	Calculus.},
  pdf = {http://dctc.sjtu.edu.cn/~FU.C/papers/gcc04.pdf},
  url = {#http://dctc.sjtu.edu.cn/~FU.C/papers/gcc04.pdf#},
}

@BOOKLET{xopengrid,
  title = {{Integrating X/Open DTP into Grid Services for Grid Transaction Processing}},
  author = {Zhengwei Qi and Xiao Xie and Baowen Zhang and Jinyuan You},
  month = {Mai},
  year = {2004},
  note = {\url{http://csdl.computer.org/comp/proceedings/ftdcs/2004/2118/00/21180128abs.htm}},
  abstract = {This paper proposes a new architecture of Grid Transaction Processing
	called GridTP
based on the OGSA platform and the X/Open DTP model.
	It is easy to
transplant the legacy transaction processing systems
	to Grid services
because GridTP has the similar programming model
	and interfaces with
traditional middleware (XA and TX). Moreover,
	GridTP is independent
of any existing transaction protocols (i.e.,
	BTP, WS-Transaction,
etc.) in web services. As a case study of GridTP,
	a Grid application
called the 3G Portal is presented to demonstrate
	the usage of this
architecture. Therefore, GridTP has made a seamless
	mechanism for embedding
the X/Open DTP model in Grid services, which
	provides one promising
reference implementation for the future Grid
	Transaction Processing.},
  url = {#http://csdl.computer.org/comp/proceedings/ftdcs/2004/2118/00/21180128abs.htm#},
}

@MASTERSTHESIS{Rathig2004Diplom,
  author = {Denis Rathig},
  title = {{Transaktionskontrolle fÃ¼r Grid Data Services}},
  school = {UniversitÃ¤t Hamburg, Fachbereich Informatik, Verteilte Systeme und
	Informationssysteme},
  year = {2004},
  pdf = {http://vsis-www.informatik.uni-hamburg.de/getDoc.php/thesis/205/DA_Rathig.pdf},
}

@MISC{Ritter2003,
  author = {Norbert Ritter},
  title = {{Informationen zur Vorlesung "`Transaktionale Informationssysteme"',
	Kapitel 6: Erweiterte Transaktionsmodelle}},
  howpublished = {Internet},
  year = {2003},
  note = {\url{http://vsis-www.informatik.uni-hamburg.de/teaching/ws-03.04/trais/Kapitel6.pdf}},
  pdf = {http://vsis-www.informatik.uni-hamburg.de/teaching/ws-03.04/trais/Kapitel6.pdf},
  url = {#http://vsis-www.informatik.uni-hamburg.de/teaching/ws-03.04/trais/Kapitel6.pdf#},
}

@MISC{tmrgWSCOORD,
  author = {Ian Robinson and Tom Freund},
  title = {{Web Service Transactions Specifications}},
  howpublished = {PrÃ¤sentation},
  month = {November},
  year = {2004},
  note = {\url{https://forge.gridforum.org/projects/tm-rg/document/WS-Coordination/en/1}},
  url = {#https://forge.gridforum.org/projects/tm-rg/document/WS-Coordination/en/1#},
}

@MISC{tmrgWSCAF,
  author = {Malik Saheb},
  title = {{Web Service Composition Application Framework}},
  howpublished = {PrÃ¤sentation},
  month = {November},
  year = {2004},
  note = {\url{https://forge.gridforum.org/projects/tm-rg/document/WS-CAF/en/1}},
  pdf = {https://forge.gridforum.org/projects/tm-rg/document/WS-CAF/en/1},
  url = {#https://forge.gridforum.org/projects/tm-rg/document/WS-CAF/en/1#},
}

@BOOK{DBLP:books/infix/Schwarz99,
  title = {{Das Konzept der TransaktionshÃ¼lle zur konsistenten Spezifikation
	von AbhÃ¤nigigkeiten in komplexen Anwendungen.}},
  publisher = {Infix Verlag, St. Augustin, Germany},
  year = {1999},
  author = {Kerstin Schwarz},
  volume = {64},
  series = {DISDBIS},
  bibsource = {DBLP, http://dblp.uni-trier.de},
}

@MISC{optionsModelImpl,
  author = {JÃ¶rg Seitter},
  title = {{Implementation Options Model proposal for evaluation}},
  howpublished = {Internet},
  year = {2005},
  note = {\url{http://www.seitter.net/optionsmodel/}},
}

@MANUAL{Srinivasan2005,
  title = {{Web Services Resource Lifetime 1.2 (WS-ResourceLifetime)}},
  author = {Latha Srinivasan and Tim Banks},
  organization = {OASIS Open},
  month = {MÃ¤rz},
  year = {2005},
  note = {\url{http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ResourceLifetime-1.2-draft-05.pdf}},
  pdf = {http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ResourceLifetime-1.2-draft-05.pdf},
  url = {#http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-ResourceLifetime-1.2-draft-05.pdf#},
}

@MISC{optionsModellProposal,
  author = {Torsten Steinbach},
  title = {{Options Model Proposal}},
  howpublished = {Internet},
  month = {Juni},
  year = {2005},
  note = {\url{https://forge.gridforum.org/projects/tm-rg/document/Options_Model_Proposal/en/1}},
}

@BOOKLET{composition,
  title = {{Composition of Coordinated Web Services}},
  author = {Stefan Tai and Rania Khalaf and Thomas Mikalsen},
  year = {2004},
  note = {\url{http://www.research.ibm.com/AEM/pubs/composition_middleware2004.pdf}},
  abstract = {The Web services architecture defines separate specifications for
	the
composition and the coordination of Web services. BPEL is a language
	for
creating service compositions in the form of business processes,
	whereas
the WS-Coordination framework defines coordination protocols
	for
distributed activities. In this paper, we investigate the combination
	of
these two aspects to compose coordinated Web services. We argue
	for a
policy-based approach to address this problem and introduce
	a new
model and middleware that enables the flexible integration
	of diverse
coordination types into (existing) processbased Web services
	compositions.},
  pdf = {http://www.research.ibm.com/AEM/pubs/composition_middleware2004.pdf},
  url = {#http://www.research.ibm.com/AEM/pubs/composition_middleware2004.pdf#},
}

@MANUAL{ogsi,
  title = {{Open Grid Services Infrastructure (OGSI) Version 1.0}},
  author = {S. Tuecke and K. Czajkowski and I. Foster and J. Frey and S. Graham
	and C. Kesselman and T. Maquire and T. Sandholm and D. Snelling and
	P. Vanderbilt},
  month = {Juni},
  year = {2003},
  note = {\url{http://www.globus.org/research/papers/Final_OGSI_Specification_V1.0.pdf}},
  abstract = {Building on both Grid and Web services
technologies, the Open Grid
	Services Infrastructure (OGSI) defines mechanisms
for creating, managing,
	and exchanging information among entities
called Grid services. Succinctly,
	a Grid service is a Web service that
conforms to a set of conventions
	(interfaces and behaviors) that
define how a client interacts with
	a Grid service. These conventions,
and other OGSI mechanisms associated
	with Grid service creation and
discovery, provide for the controlled,
	fault-resilient, and secure
management of the distributed and often
	long-lived state that is
commonly required in advanced distributed
	applications. In a separate
document, we have presented in detail
	the motivation, requirements,
structure, and applications that underlie
	OGSI. Here we focus on technical
details, providing a full specification
	of the behaviors and Web Service
Definition Language (WSDL) interfaces
	that define a Grid service.},
  pdf = {http://www.globus.org/research/papers/Final_OGSI_Specification_V1.0.pdf},
  url = {#http://www.globus.org/research/papers/Final_OGSI_Specification_V1.0.pdf#},
}

@MANUAL{Tuecke2005,
  title = {{Web Services Base Faults 1.2 (WS-BaseFaults)}},
  author = {Steve Tuecke and Lily Liu and Sam Meder},
  organization = {OASIS Open},
  month = {MÃ¤rz},
  year = {2005},
  note = {\url{http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-BaseFaults-1.2-draft-04.pdf}},
  pdf = {http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-BaseFaults-1.2-draft-04.pdf},
  url = {#http://docs.oasis-open.org/wsrf/2005/03/wsrf-WS-BaseFaults-1.2-draft-04.pdf#},
}

@INPROCEEDINGS{Turker2005,
  author = {Can TÃ¼rker and Klaus Haller and Christoph Schuler and Hans-JÃ¶rg Schek},
  title = {{How can we support Grid Transactions? Towards Peer-to-Peer Transaction
	Processing.}},
  booktitle = {CIDR},
  year = {2005},
  pages = {174-185},
  abstract = {Today, we witness a merger between Web services and grid technology
towards
	an open grid service infrastructure that especially satisfies
the
	demands of complex computations on huge volumes of data. Such
applications
	are specified as combinations of services and are executed as
workflow
	processes. While transactional support was neglected for
(business)
	workflows, in the grid domain we observe not only a more
general
	usage of workflow technology but also a stronger awareness of
transactional
	guarantees. The rigid database notions of atomicity
and isolation
	are however not suited for composite services in grid
applications
	because of their complexity and duration. Beyond, the level of
abstraction
	in the grid is far above database pages such that two-phase
commit
	combined with two-phase locking as the state-of-the-art for
distributed
	transactions is not adequate. Rather, compensation of
services, restarting
	services, and invoking alternative services
are needed. In this context
	many questions are open. How does the
infrastructure detect and handle
	conflicts? What happens if a service is
unavailable? Can we locally
	decide whether a distributed execution of
transactions is globally
	correct? In this paper, we tackle some of
these questions and sketch
	an approach to ensuring globally correct
executions of transactional
	processes without a global coordinator.},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {http://www-db.cs.wisc.edu/cidr/papers/P15.pdf},
}

@MANUAL{Vambenepe2004,
  title = {{Web Services Topics 1.2 (WS-Topics)}},
  author = {William Vambenepe},
  organization = {OASIS Open},
  month = {Juli},
  year = {2004},
  note = {\url{http://docs.oasis-open.org/wsn/2004/06/wsn-WS-Topics-1.2-draft-01.pdf}},
  owner = {boba},
  pdf = {http://docs.oasis-open.org/wsn/2004/06/wsn-WS-Topics-1.2-draft-01.pdf},
  url = {#http://docs.oasis-open.org/wsn/2004/06/wsn-WS-Topics-1.2-draft-01.pdf#},
}

@BOOK{Vossen2000,
  title = {{Datenbankmodelle, Datenbanksprachen und Datenbankmanagementsysteme}},
  publisher = {Oldenbourg Verlag},
  year = {2000},
  author = {Gottfried Vossen},
  edition = {4., korrigierte und ergÃ¤nzte Auflage},
  isbn = {3-486-25339-5},
}

@INPROCEEDINGS{Vyssotsky1965,
  author = {V. A. Vyssotsky and F. J. CorbatÃ³ and R. M. Graham},
  title = {{Structure of the Multics Supervisor}},
  booktitle = {AFIPS Conference Proceedings},
  year = {1965},
  volume = {Vol. 27},
  pages = {Seite 203},
  note = {\url{http://www.multicians.org/fjcc3.html}},
  url = {#http://www.multicians.org/fjcc3.html#},
}

@BOOKLET{ibmGridPart1,
  title = {{Developing Grid computing applications, Part 1}},
  author = {Liang-Jie Zhang and Jen-Yao Chung and Qun Zhou},
  month = {Oktober},
  year = {2002},
  note = {\url{http://www-128.ibm.com/developerworks/library/gr-grid1/}},
  abstract = {According to Gartner, many businesses will be completely transformed
over
	the next decade by using Grid-enabled Web services to integrate
across
	the Internet to share not only applications, but also computer
power.
	This article introduces developers to the basic idea of Grid
computing
	and the Open Grid Services Architecture (OGSA). Developers can
use
	the latest Globus Toolkit (Open Grid Services Infrastructure
technology
	preview) to discover a Grid service, create a Grid service
interface,
	and invoke a Grid service instance. Some ideas to help
developers
	integrate Web services and Grid computing are also described.},
  url = {#http://www-128.ibm.com/developerworks/library/gr-grid1/#},
}

@BOOK{DBLP:books/mk/Elmagarmid92,
  title = {{Database Transaction Models for Advanced Applications}},
  publisher = {Morgan Kaufmann},
  year = {1992},
  editor = {Ahmed K. Elmagarmid},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  isbn = {1-55860-214-3},
}

@BOOK{DBLP:books/kl/JajodiaK97,
  title = {{Advanced Transaction Models and Architectures}},
  publisher = {Kluwer},
  year = {1997},
  editor = {Sushil Jajodia and Larry Kerschberg},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  isbn = {0-7923-9880-7},
}

@BOOKLET{GlobusAbout,
  title = {{About the Globus Toolkit}},
  year = {2005},
  note = {\url{http://www.globus.org/toolkit/about.html}},
  url = {#http://www.globus.org/toolkit/about.html#},
}

@MISC{ChartaTMRG,
  title = {{Proposed Grid Transactions RG - Charter}},
  howpublished = {Internet},
  month = {November},
  year = {2004},
  note = {\url{https://forge.gridforum.org/docman2/ViewCategory.php?group_id=140\&category_id=724}},
  url = {#https://forge.gridforum.org/docman2/ViewCategory.php?group_id=140&category_id=724#},
}

@MANUAL{xopenDTP,
  title = {{Distributed Transaction Processing: Reference Model, Version 3}},
  year = {1993},
  note = {\url{http://www.opengroup.org/bookstore/catalog/g504.htm}},
  url = {#http://www.opengroup.org/bookstore/catalog/g504.htm#},
}

